
restart;
with(linalg):
interface(showassumed = 0):

E[1] := Matrix(4, 4, {(1, 1) = A[1, 1], (1, 2) = A[1, 2], (1, 3) = A[1, 3], (1, 4) = 1, (2, 1) = A[2, 1], (2, 2) = A[2, 2], (2, 3) = A[2, 3], (2, 4) = 0, (3, 1) = I*(2+4*epsilon), (3, 2) = 0, (3, 3) = 0, (3, 4) = 0, (4, 1) = 0, (4, 2) = 0, (4, 3) = 0, (4, 4) = 0});
E[2] := Matrix(4, 4, {(1, 1) = B[1, 1], (1, 2) = B[1, 2], (1, 3) = B[1, 3], (1, 4) = I, (2, 1) = B[2, 1], (2, 2) = B[2, 2], (2, 3) = B[2, 3], (2, 4) = 0, (3, 1) = 2-4*epsilon, (3, 2) = 0, (3, 3) = 0, (3, 4) = 0, (4, 1) = 0, (4, 2) = 0, (4, 3) = 0, (4, 4) = 0});
E[3] := Matrix(4, 4, {(1, 1) = C[1, 1], (1, 2) = C[1, 2], (1, 3) = C[1, 3], (1, 4) = 0, (2, 1) = C[2, 1], (2, 2) = C[2, 2], (2, 3) = C[2, 3], (2, 4) = 1, (3, 1) = 0, (3, 2) = I*(2+4*epsilon), (3, 3) = 0, (3, 4) = 0, (4, 1) = 0, (4, 2) = 0, (4, 3) = 0, (4, 4) = 0}); 
E[4] := Matrix(4, 4, {(1, 1) = F[1, 1], (1, 2) = F[1, 2], (1, 3) = F[1, 3], (1, 4) = 0, (2, 1) = F[2, 1], (2, 2) = F[2, 2], (2, 3) = F[2, 3], (2, 4) = I, (3, 1) = 0, (3, 2) = 2-4*epsilon, (3, 3) = 0, (3, 4) = 0, (4, 1) = 0, (4, 2) = 0, (4, 3) = 0, (4, 4) = 0});
E[5] := Matrix(4, 4, {(1, 1) = G[1, 1], (1, 2) = G[1, 2], (1, 3) = G[1, 3], (1, 4) = 0, (2, 1) = G[2, 1], (2, 2) = G[2, 2], (2, 3) = G[2, 3], (2, 4) = 0, (3, 1) = 0, (3, 2) = (2*I)*lambda, (3, 3) = 0, (3, 4) = 1, (4, 1) = 0, (4, 2) = 0, (4, 3) = 0, (4, 4) = 0});
E[6] := Matrix(4, 4, {(1, 1) = 1, (1, 2) = -beta, (1, 3) = H[1, 3], (1, 4) = 0, (2, 1) = beta, (2, 2) = 1, (2, 3) = H[2, 3], (2, 4) = 0, (3, 1) = 0, (3, 2) = 0, (3, 3) = 2, (3, 4) = 0, (4, 1) = 0, (4, 2) = 0, (4, 3) = 0, (4, 4) = 0});

assume(epsilon>0);
assume(lambda,'real');
assume(beta,'real');

for i from 0 to 1 do 
	for j from 0 to 1 do
		k := 0;
		A[i+1, j+1] := t[4*i+2*j+1+8*k]+I*t[4*i+2*j+2+8*k]; 
		
		k := k+1; 
		B[i+1, j+1] := t[4*i+2*j+1+8*k]+I*t[4*i+2*j+2+8*k]; 
		
		k := k+1; 
		C[i+1, j+1] := t[4*i+2*j+1+8*k]+I*t[4*i+2*j+2+8*k];
		
		k := k+1; 
		F[i+1, j+1] := t[4*i+2*j+1+8*k]+I*t[4*i+2*j+2+8*k] 
	end do;
end do;

for i from 1 to 32 do
	assume(t[i],'real');
end do;




sys:={}:

sols:={}:

for i from 1 to 32 do
	sols:={op(sols),t[i]}:
end:

for i from 1 to 5 do 
	for j from i+1 to 6 do

		Comm[i,j]:=E[i].E[j]-E[j].E[i];

		r1:=Re(Comm[i,j][1,4]);
		r2:=Im(Comm[i,j][1,4]);
		r3:=Re(Comm[i,j][2,4]);
		r4:=Im(Comm[i,j][2,4]);
		r5:=Re(Comm[i,j][3,4]);
			
		Corr[i,j] := ( Comm[i,j] - (r1*E[1] + r2*E[2] + r3*E[3] + r4*E[4] + r5*E[5]));

		for k from 1 to 4 do
			for l from 1 to 3 do
				
				if(simplify(Re(Corr[i,j][k,l])<>0)) or (Re(E[6][k,l])<>0) then
					print(i,j,"  ",k,l,simplify(Re(Corr[i,j][k,l])),"  =  ",Re(E[6][k,l]));
				end;
				 
				if(simplify(Im(Corr[i,j][k,l])<>0)) or (Im(E[6][k,l])<>0) then
					print(i,j,"  ",k,l,simplify(Im(Corr[i,j][k,l])),"  =  ",Im(E[6][k,l]));
				end;
			end;
		end;
		
		if(i<>5) and (j<>5) then
			for k from 1 to 2 do
				sys:={op(sys),simplify(Re(Corr[i,j][3,k]))};
				
				sys:={op(sys),simplify(Im(Corr[i,j][3,k]))};

				if(j=6) then
					sys:={op(sys),simplify(Re(Corr[i,j][k,k]))};
				
					sys:={op(sys),simplify(Im(Corr[i,j][k,k]))};
				end;
			end;			
		end;
	end;
end;
sol:= simplify(solve(sys,sols));

N:=numelems(sys):

for i from 1 to N do
	i,sys[i]:
end:


M := Matrix(N, 32):


for i from 1 to N do
	for j from 1 to 32 do
		M[i,j]:=coeff(sys[i],t[j]);
	end;
end;


evalm(M);
rank(M);


for i from 1 to 32 do
	assign(sol[i]);
end;
t[5]:=-beta*t[21]:
t[13]:=-beta*t[29]:


