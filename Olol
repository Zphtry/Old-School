#include <stdio.h>
#include <stdlib.h>
#include <omp.h>
#include <stdbool.h> 
#include <time.h>
unsigned long int my_pow(int x, int n){
	if(n != 0) return x*my_pow(x, n-1);
	else return 1;}
int max(int x, int y){
	if(x > y) return x;
	else return y;}
bool longIsZero(int*X, int size_X){
	for (int i = 0; i < size_X; ++i)
		if (X[i] != 0) return true;
	return false;}
void longSumIn1stArg(int* X, int size_X){
	int nextDigit = 0, sum;
	X[size_X + 1] = new int;
	X[size_X + 1] = 0;
	for (int i = 0; i <= size_X; ++i)
	{
		sum = X[i]*2 + nextDigit;
		X[i] = sum % 10;
		nextDigit = sum / 10;
	}}
void longDecrement(int* X, int size_X){
	for (int i = 0; i < size_X; ++i)
		if(X[i] != 0)
		{
			 X[i]--;
			 break;
		}
		else
			X[i] = 9;
	}
void longMultIn1stArg(int* X, int size_X, int* Y, int size_Y){
	for (int i = 0; longIsZero(Y, size_Y); longDecrement(Y, size_Y), ++i)
		longSumIn1stArg(X, size_X + i);}
void longPrintf(int* X, int size_X){
	for (int i = size_X - 1; i >= 0; --i)
		printf("%i", X[i]);printf("\n");}
void main()
{
	int X[10], Y[1];
	for (int i = 0; i < 10; ++i){
		X[i] = rand() % 9 + 1;}
	Y[0] = 2;
	longMultIn1stArg(X, 10, Y, 1);
	longPrintf( X, 15);
}
